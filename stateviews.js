export const stateViews = [{"name": "top","abstract": true,"data": {"grid1":[{"CityName":"Islamabad","CityLat":25.06,"CityLong":5956}],"grid2":[{"CityName":"Lahore","CityLat":85,"CityLong":23}]},"template": `<div class="container-fluid" ui-view="top"></div>`,"resolve": {"grid1": ["$state$", ($state$) => { return $state$.data["grid1"];}],"grid2": ["$state$", ($state$) => { return $state$.data["grid2"];}],"ApiMetaData": [() => { return{"Accounts":{"operationId":"SE_Accounts","resolved":true,"responsePath":".rows","inputParams":{}}}}],"Accounts": ["dataService", "$state", "$state$", "$stateParams", "ApiMetaData", async (dataService, $state, $state$, $stateParams, ApiMetaData) => {
                        return await dataService.resolve(Object.assign({ name: "Accounts" }, ApiMetaData["Accounts"]), $state, $state$, $stateParams);
                    }],"lazyLoaduiGridComponent": ["$ocLazyLoad", async function ($ocLazyLoad) {
                            console.log('isLoaded uiGridComponent', $ocLazyLoad.isLoaded('uiGridModule'))
                            let mod = await import('../src/app/modules/uiGrid/uiGrid')
                            return $ocLazyLoad.load(mod['uiGridModule']);
                        }],"cityGrid": [() => { return {"component":"uiGridComponent","guiDevMenuEntry":"Edit uiGrid (cityGrid)","guiDevId":"1d8298cc-1e45-414d-9fd9-44c83256cf84","guiDevWizard":"uiGridWizard","enableSorting":true,"paginationPageSizes":[10,20,50,100],"paginationPageSize":10,"enableScrollbars":true,"enableFiltering":true,"enableRowHeaderSelection":false,"data":null,"columnDefs":[{"name":"CityName","displayName":"City Name","enableCellEdit":true},{"name":"CityLat","displayName":"City Latitide","enableCellEdit":false},{"name":"CityLong","displayName":"City Longitude","enableCellEdit":false}]}}],},"params": {},}, {"name": "top.gui","url": "/","views": {"top@top": {"bindings": {"data":"grid1","metaData":"cityGrid"},"component": "uiGridComponent",},},},{"name": "top.gui.home","abstract": true,"resolve": {"ApiMetaData": [() => { return{}}],"lazyLoadformComponent": ["$ocLazyLoad", async function ($ocLazyLoad) {
                            console.log('isLoaded formComponent', $ocLazyLoad.isLoaded('formModule'))
                            let mod = await import('../src/app/modules/form/form')
                            return $ocLazyLoad.load(mod['formModule']);
                        }],"testform": [() => { return {"component":"formComponent","guiDevMenuEntry":"Edit form (testform)","guiDevId":"1d8298cc-1e45-414d-9fd9-44c83256cf89","guiDevWizard":"formWizard","heading":"Test Form","elementsPerRow":3,"parameters":[{"ctype":"text","label":"Name","name":"name","guiDevId":"1d8298cc-1e45-414d-9fd9-44c83256cf90","guiDevMenuEntry":"Edit Form Parameter ('name')","guiDevWizard":"formParameterWizard"},{"ctype":"text","label":"Age","name":"age","guiDevId":"1d8298cc-1e45-414d-9fd9-44c83256cf91","guiDevMenuEntry":"Edit Form Parameter (age)","guiDevWizard":"formParameterWizard"},{"ctype":"text","label":"DoB","name":"dob","guiDevId":"1d8298cc-1e45-414d-9fd9-44c83256cf92","guiDevMenuEntry":"Edit Form Parameter (dob)","guiDevWizard":"formParameterWizard"},{"ctype":"text","label":"CoB","name":"cob","guiDevId":"1d8298cc-1e45-414d-9fd9-44c83256cf93","guiDevMenuEntry":"Edit Form Parameter (cob)","guiDevWizard":"formParameterWizard"},{"ctype":"text","label":"Current City","name":"currentCity","guiDevId":"1d8298cc-1e45-414d-9fd9-44c83256cf94","guiDevMenuEntry":"Edit Form Parameter (currentCity)","guiDevWizard":"formParameterWizard"}]}}],},}, {"name": "top.gui.home.gui","url": "home","views": {"top@top": {"component": "formComponent","bindings": {"metaData":"testform"},},},},{"params": {},"data": {},"resolve": {"ApiMetaData": [() => { return{}}],"hello": ["dataService", "$state", "$state$", "$stateParams", async (dataService, $state, $state$, $stateParams) => {
let grid1 = $state$.data["grid1"];
let grid2 = $state$.data["grid2"];
try {
/* Write your code here */
let x = grid1.concat(grid2);
$state$.data["hello"] = x; 
return x;} catch (error) { let errMsg = ""; if (typeof error === "object") for (let prop in error) errMsg += `	` + prop + ": " + error[prop] + `
`; if (errMsg === "") errMsg = error.toString(); alert(`The code you have written to create your custom variable "hello" has the following errors: 
	` + errMsg + `
Please correct your code, otherwise the variable "hello" will set set to null!`); return null; } }],},"name": "top.gui.test","abstract": true,}, {"url": "test","name": "top.gui.test.gui","views": {"top@top": {"bindings": {"data":"hello","metaData":"cityGrid"},"component": "uiGridComponent",},},},{"params": {},"data": {},"resolve": {"ApiMetaData": [() => { return{}}],},"name": "top.gui.home.gui.new","abstract": true,"views": {"top@top": {"template": `<div ui-view="left" class="col-md-3"></div>
<div ui-view="right" class="col-md-9"></div>`,},},}, {"url": "/new","name": "top.gui.home.gui.new.gui","views": {"left@top.gui.home.gui.new": {"bindings": {"data":"","metaData":"testform"},"component": "formComponent",},"right@top.gui.home.gui.new": {"bindings": {"data":"grid2","metaData":"cityGrid"},"component": "uiGridComponent",},},},]